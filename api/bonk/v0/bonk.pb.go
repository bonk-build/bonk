// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.9
// 	protoc        (unknown)
// source: bonk/v0/bonk.proto

package v0

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	structpb "google.golang.org/protobuf/types/known/structpb"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type OpenSessionRequest struct {
	state                           protoimpl.MessageState                    `protogen:"opaque.v1"`
	xxx_hidden_SessionId            *string                                   `protobuf:"bytes,1,opt,name=session_id,json=sessionId"`
	xxx_hidden_LogStreaming         *OpenSessionRequest_LogStreamingOptions   `protobuf:"bytes,2,opt,name=log_streaming,json=logStreaming"`
	xxx_hidden_WorkspaceDescription isOpenSessionRequest_WorkspaceDescription `protobuf_oneof:"workspace_description"`
	XXX_raceDetectHookData          protoimpl.RaceDetectHookData
	XXX_presence                    [1]uint32
	unknownFields                   protoimpl.UnknownFields
	sizeCache                       protoimpl.SizeCache
}

func (x *OpenSessionRequest) Reset() {
	*x = OpenSessionRequest{}
	mi := &file_bonk_v0_bonk_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *OpenSessionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OpenSessionRequest) ProtoMessage() {}

func (x *OpenSessionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_bonk_v0_bonk_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *OpenSessionRequest) GetSessionId() string {
	if x != nil {
		if x.xxx_hidden_SessionId != nil {
			return *x.xxx_hidden_SessionId
		}
		return ""
	}
	return ""
}

func (x *OpenSessionRequest) GetLogStreaming() *OpenSessionRequest_LogStreamingOptions {
	if x != nil {
		return x.xxx_hidden_LogStreaming
	}
	return nil
}

func (x *OpenSessionRequest) GetLocal() *OpenSessionRequest_WorkspaceDescriptionLocal {
	if x != nil {
		if x, ok := x.xxx_hidden_WorkspaceDescription.(*openSessionRequest_Local); ok {
			return x.Local
		}
	}
	return nil
}

func (x *OpenSessionRequest) GetTest() *OpenSessionRequest_WorkspaceDescriptionTest {
	if x != nil {
		if x, ok := x.xxx_hidden_WorkspaceDescription.(*openSessionRequest_Test); ok {
			return x.Test
		}
	}
	return nil
}

func (x *OpenSessionRequest) SetSessionId(v string) {
	x.xxx_hidden_SessionId = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 3)
}

func (x *OpenSessionRequest) SetLogStreaming(v *OpenSessionRequest_LogStreamingOptions) {
	x.xxx_hidden_LogStreaming = v
}

func (x *OpenSessionRequest) SetLocal(v *OpenSessionRequest_WorkspaceDescriptionLocal) {
	if v == nil {
		x.xxx_hidden_WorkspaceDescription = nil
		return
	}
	x.xxx_hidden_WorkspaceDescription = &openSessionRequest_Local{v}
}

func (x *OpenSessionRequest) SetTest(v *OpenSessionRequest_WorkspaceDescriptionTest) {
	if v == nil {
		x.xxx_hidden_WorkspaceDescription = nil
		return
	}
	x.xxx_hidden_WorkspaceDescription = &openSessionRequest_Test{v}
}

func (x *OpenSessionRequest) HasSessionId() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *OpenSessionRequest) HasLogStreaming() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_LogStreaming != nil
}

func (x *OpenSessionRequest) HasWorkspaceDescription() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_WorkspaceDescription != nil
}

func (x *OpenSessionRequest) HasLocal() bool {
	if x == nil {
		return false
	}
	_, ok := x.xxx_hidden_WorkspaceDescription.(*openSessionRequest_Local)
	return ok
}

func (x *OpenSessionRequest) HasTest() bool {
	if x == nil {
		return false
	}
	_, ok := x.xxx_hidden_WorkspaceDescription.(*openSessionRequest_Test)
	return ok
}

func (x *OpenSessionRequest) ClearSessionId() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_SessionId = nil
}

func (x *OpenSessionRequest) ClearLogStreaming() {
	x.xxx_hidden_LogStreaming = nil
}

func (x *OpenSessionRequest) ClearWorkspaceDescription() {
	x.xxx_hidden_WorkspaceDescription = nil
}

func (x *OpenSessionRequest) ClearLocal() {
	if _, ok := x.xxx_hidden_WorkspaceDescription.(*openSessionRequest_Local); ok {
		x.xxx_hidden_WorkspaceDescription = nil
	}
}

func (x *OpenSessionRequest) ClearTest() {
	if _, ok := x.xxx_hidden_WorkspaceDescription.(*openSessionRequest_Test); ok {
		x.xxx_hidden_WorkspaceDescription = nil
	}
}

const OpenSessionRequest_WorkspaceDescription_not_set_case case_OpenSessionRequest_WorkspaceDescription = 0
const OpenSessionRequest_Local_case case_OpenSessionRequest_WorkspaceDescription = 5
const OpenSessionRequest_Test_case case_OpenSessionRequest_WorkspaceDescription = 99

func (x *OpenSessionRequest) WhichWorkspaceDescription() case_OpenSessionRequest_WorkspaceDescription {
	if x == nil {
		return OpenSessionRequest_WorkspaceDescription_not_set_case
	}
	switch x.xxx_hidden_WorkspaceDescription.(type) {
	case *openSessionRequest_Local:
		return OpenSessionRequest_Local_case
	case *openSessionRequest_Test:
		return OpenSessionRequest_Test_case
	default:
		return OpenSessionRequest_WorkspaceDescription_not_set_case
	}
}

type OpenSessionRequest_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	SessionId    *string
	LogStreaming *OpenSessionRequest_LogStreamingOptions
	// Fields of oneof xxx_hidden_WorkspaceDescription:
	Local *OpenSessionRequest_WorkspaceDescriptionLocal
	Test  *OpenSessionRequest_WorkspaceDescriptionTest
	// -- end of xxx_hidden_WorkspaceDescription
}

func (b0 OpenSessionRequest_builder) Build() *OpenSessionRequest {
	m0 := &OpenSessionRequest{}
	b, x := &b0, m0
	_, _ = b, x
	if b.SessionId != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 3)
		x.xxx_hidden_SessionId = b.SessionId
	}
	x.xxx_hidden_LogStreaming = b.LogStreaming
	if b.Local != nil {
		x.xxx_hidden_WorkspaceDescription = &openSessionRequest_Local{b.Local}
	}
	if b.Test != nil {
		x.xxx_hidden_WorkspaceDescription = &openSessionRequest_Test{b.Test}
	}
	return m0
}

type case_OpenSessionRequest_WorkspaceDescription protoreflect.FieldNumber

func (x case_OpenSessionRequest_WorkspaceDescription) String() string {
	md := file_bonk_v0_bonk_proto_msgTypes[0].Descriptor()
	if x == 0 {
		return "not set"
	}
	return protoimpl.X.MessageFieldStringOf(md, protoreflect.FieldNumber(x))
}

type isOpenSessionRequest_WorkspaceDescription interface {
	isOpenSessionRequest_WorkspaceDescription()
}

type openSessionRequest_Local struct {
	Local *OpenSessionRequest_WorkspaceDescriptionLocal `protobuf:"bytes,5,opt,name=local,oneof"`
}

type openSessionRequest_Test struct {
	Test *OpenSessionRequest_WorkspaceDescriptionTest `protobuf:"bytes,99,opt,name=test,oneof"`
}

func (*openSessionRequest_Local) isOpenSessionRequest_WorkspaceDescription() {}

func (*openSessionRequest_Test) isOpenSessionRequest_WorkspaceDescription() {}

// This is meant to mirror [slog.Record](https://pkg.go.dev/log/slog#Record)
type OpenSessionResponse struct {
	state              protoimpl.MessageState        `protogen:"opaque.v1"`
	xxx_hidden_Message isOpenSessionResponse_Message `protobuf_oneof:"message"`
	unknownFields      protoimpl.UnknownFields
	sizeCache          protoimpl.SizeCache
}

func (x *OpenSessionResponse) Reset() {
	*x = OpenSessionResponse{}
	mi := &file_bonk_v0_bonk_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *OpenSessionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OpenSessionResponse) ProtoMessage() {}

func (x *OpenSessionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_bonk_v0_bonk_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *OpenSessionResponse) GetAck() *OpenSessionResponse_Ack {
	if x != nil {
		if x, ok := x.xxx_hidden_Message.(*openSessionResponse_Ack_); ok {
			return x.Ack
		}
	}
	return nil
}

func (x *OpenSessionResponse) GetLogRecord() *OpenSessionResponse_LogRecord {
	if x != nil {
		if x, ok := x.xxx_hidden_Message.(*openSessionResponse_LogRecord_); ok {
			return x.LogRecord
		}
	}
	return nil
}

func (x *OpenSessionResponse) SetAck(v *OpenSessionResponse_Ack) {
	if v == nil {
		x.xxx_hidden_Message = nil
		return
	}
	x.xxx_hidden_Message = &openSessionResponse_Ack_{v}
}

func (x *OpenSessionResponse) SetLogRecord(v *OpenSessionResponse_LogRecord) {
	if v == nil {
		x.xxx_hidden_Message = nil
		return
	}
	x.xxx_hidden_Message = &openSessionResponse_LogRecord_{v}
}

func (x *OpenSessionResponse) HasMessage() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_Message != nil
}

func (x *OpenSessionResponse) HasAck() bool {
	if x == nil {
		return false
	}
	_, ok := x.xxx_hidden_Message.(*openSessionResponse_Ack_)
	return ok
}

func (x *OpenSessionResponse) HasLogRecord() bool {
	if x == nil {
		return false
	}
	_, ok := x.xxx_hidden_Message.(*openSessionResponse_LogRecord_)
	return ok
}

func (x *OpenSessionResponse) ClearMessage() {
	x.xxx_hidden_Message = nil
}

func (x *OpenSessionResponse) ClearAck() {
	if _, ok := x.xxx_hidden_Message.(*openSessionResponse_Ack_); ok {
		x.xxx_hidden_Message = nil
	}
}

func (x *OpenSessionResponse) ClearLogRecord() {
	if _, ok := x.xxx_hidden_Message.(*openSessionResponse_LogRecord_); ok {
		x.xxx_hidden_Message = nil
	}
}

const OpenSessionResponse_Message_not_set_case case_OpenSessionResponse_Message = 0
const OpenSessionResponse_Ack_case case_OpenSessionResponse_Message = 1
const OpenSessionResponse_LogRecord_case case_OpenSessionResponse_Message = 2

func (x *OpenSessionResponse) WhichMessage() case_OpenSessionResponse_Message {
	if x == nil {
		return OpenSessionResponse_Message_not_set_case
	}
	switch x.xxx_hidden_Message.(type) {
	case *openSessionResponse_Ack_:
		return OpenSessionResponse_Ack_case
	case *openSessionResponse_LogRecord_:
		return OpenSessionResponse_LogRecord_case
	default:
		return OpenSessionResponse_Message_not_set_case
	}
}

type OpenSessionResponse_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// Fields of oneof xxx_hidden_Message:
	Ack       *OpenSessionResponse_Ack
	LogRecord *OpenSessionResponse_LogRecord
	// -- end of xxx_hidden_Message
}

func (b0 OpenSessionResponse_builder) Build() *OpenSessionResponse {
	m0 := &OpenSessionResponse{}
	b, x := &b0, m0
	_, _ = b, x
	if b.Ack != nil {
		x.xxx_hidden_Message = &openSessionResponse_Ack_{b.Ack}
	}
	if b.LogRecord != nil {
		x.xxx_hidden_Message = &openSessionResponse_LogRecord_{b.LogRecord}
	}
	return m0
}

type case_OpenSessionResponse_Message protoreflect.FieldNumber

func (x case_OpenSessionResponse_Message) String() string {
	md := file_bonk_v0_bonk_proto_msgTypes[1].Descriptor()
	if x == 0 {
		return "not set"
	}
	return protoimpl.X.MessageFieldStringOf(md, protoreflect.FieldNumber(x))
}

type isOpenSessionResponse_Message interface {
	isOpenSessionResponse_Message()
}

type openSessionResponse_Ack_ struct {
	Ack *OpenSessionResponse_Ack `protobuf:"bytes,1,opt,name=ack,oneof"`
}

type openSessionResponse_LogRecord_ struct {
	LogRecord *OpenSessionResponse_LogRecord `protobuf:"bytes,2,opt,name=log_record,json=logRecord,oneof"`
}

func (*openSessionResponse_Ack_) isOpenSessionResponse_Message() {}

func (*openSessionResponse_LogRecord_) isOpenSessionResponse_Message() {}

type ExecuteTaskRequest struct {
	state                  protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_SessionId   *string                `protobuf:"bytes,1,opt,name=session_id,json=sessionId"`
	xxx_hidden_Id          *string                `protobuf:"bytes,2,opt,name=id"`
	xxx_hidden_Executor    *string                `protobuf:"bytes,3,opt,name=executor"`
	xxx_hidden_Inputs      []string               `protobuf:"bytes,4,rep,name=inputs"`
	xxx_hidden_Arguments   *structpb.Value        `protobuf:"bytes,5,opt,name=arguments"`
	XXX_raceDetectHookData protoimpl.RaceDetectHookData
	XXX_presence           [1]uint32
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *ExecuteTaskRequest) Reset() {
	*x = ExecuteTaskRequest{}
	mi := &file_bonk_v0_bonk_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ExecuteTaskRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExecuteTaskRequest) ProtoMessage() {}

func (x *ExecuteTaskRequest) ProtoReflect() protoreflect.Message {
	mi := &file_bonk_v0_bonk_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *ExecuteTaskRequest) GetSessionId() string {
	if x != nil {
		if x.xxx_hidden_SessionId != nil {
			return *x.xxx_hidden_SessionId
		}
		return ""
	}
	return ""
}

func (x *ExecuteTaskRequest) GetId() string {
	if x != nil {
		if x.xxx_hidden_Id != nil {
			return *x.xxx_hidden_Id
		}
		return ""
	}
	return ""
}

func (x *ExecuteTaskRequest) GetExecutor() string {
	if x != nil {
		if x.xxx_hidden_Executor != nil {
			return *x.xxx_hidden_Executor
		}
		return ""
	}
	return ""
}

func (x *ExecuteTaskRequest) GetInputs() []string {
	if x != nil {
		return x.xxx_hidden_Inputs
	}
	return nil
}

func (x *ExecuteTaskRequest) GetArguments() *structpb.Value {
	if x != nil {
		return x.xxx_hidden_Arguments
	}
	return nil
}

func (x *ExecuteTaskRequest) SetSessionId(v string) {
	x.xxx_hidden_SessionId = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 5)
}

func (x *ExecuteTaskRequest) SetId(v string) {
	x.xxx_hidden_Id = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 5)
}

func (x *ExecuteTaskRequest) SetExecutor(v string) {
	x.xxx_hidden_Executor = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 2, 5)
}

func (x *ExecuteTaskRequest) SetInputs(v []string) {
	x.xxx_hidden_Inputs = v
}

func (x *ExecuteTaskRequest) SetArguments(v *structpb.Value) {
	x.xxx_hidden_Arguments = v
}

func (x *ExecuteTaskRequest) HasSessionId() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *ExecuteTaskRequest) HasId() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *ExecuteTaskRequest) HasExecutor() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 2)
}

func (x *ExecuteTaskRequest) HasArguments() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_Arguments != nil
}

func (x *ExecuteTaskRequest) ClearSessionId() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_SessionId = nil
}

func (x *ExecuteTaskRequest) ClearId() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_Id = nil
}

func (x *ExecuteTaskRequest) ClearExecutor() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 2)
	x.xxx_hidden_Executor = nil
}

func (x *ExecuteTaskRequest) ClearArguments() {
	x.xxx_hidden_Arguments = nil
}

type ExecuteTaskRequest_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	SessionId *string
	Id        *string
	Executor  *string
	Inputs    []string
	Arguments *structpb.Value
}

func (b0 ExecuteTaskRequest_builder) Build() *ExecuteTaskRequest {
	m0 := &ExecuteTaskRequest{}
	b, x := &b0, m0
	_, _ = b, x
	if b.SessionId != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 5)
		x.xxx_hidden_SessionId = b.SessionId
	}
	if b.Id != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 5)
		x.xxx_hidden_Id = b.Id
	}
	if b.Executor != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 2, 5)
		x.xxx_hidden_Executor = b.Executor
	}
	x.xxx_hidden_Inputs = b.Inputs
	x.xxx_hidden_Arguments = b.Arguments
	return m0
}

type ExecuteTaskResponse struct {
	state                    protoimpl.MessageState               `protogen:"opaque.v1"`
	xxx_hidden_Output        []string                             `protobuf:"bytes,1,rep,name=output"`
	xxx_hidden_FollowupTasks *[]*ExecuteTaskResponse_FollowupTask `protobuf:"bytes,2,rep,name=followup_tasks,json=followupTasks"`
	unknownFields            protoimpl.UnknownFields
	sizeCache                protoimpl.SizeCache
}

func (x *ExecuteTaskResponse) Reset() {
	*x = ExecuteTaskResponse{}
	mi := &file_bonk_v0_bonk_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ExecuteTaskResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExecuteTaskResponse) ProtoMessage() {}

func (x *ExecuteTaskResponse) ProtoReflect() protoreflect.Message {
	mi := &file_bonk_v0_bonk_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *ExecuteTaskResponse) GetOutput() []string {
	if x != nil {
		return x.xxx_hidden_Output
	}
	return nil
}

func (x *ExecuteTaskResponse) GetFollowupTasks() []*ExecuteTaskResponse_FollowupTask {
	if x != nil {
		if x.xxx_hidden_FollowupTasks != nil {
			return *x.xxx_hidden_FollowupTasks
		}
	}
	return nil
}

func (x *ExecuteTaskResponse) SetOutput(v []string) {
	x.xxx_hidden_Output = v
}

func (x *ExecuteTaskResponse) SetFollowupTasks(v []*ExecuteTaskResponse_FollowupTask) {
	x.xxx_hidden_FollowupTasks = &v
}

type ExecuteTaskResponse_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Output        []string
	FollowupTasks []*ExecuteTaskResponse_FollowupTask
}

func (b0 ExecuteTaskResponse_builder) Build() *ExecuteTaskResponse {
	m0 := &ExecuteTaskResponse{}
	b, x := &b0, m0
	_, _ = b, x
	x.xxx_hidden_Output = b.Output
	x.xxx_hidden_FollowupTasks = &b.FollowupTasks
	return m0
}

type OpenSessionRequest_LogStreamingOptions struct {
	state                  protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Level       int64                  `protobuf:"varint,1,opt,name=level"`
	xxx_hidden_AddSource   bool                   `protobuf:"varint,2,opt,name=add_source,json=addSource"`
	XXX_raceDetectHookData protoimpl.RaceDetectHookData
	XXX_presence           [1]uint32
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *OpenSessionRequest_LogStreamingOptions) Reset() {
	*x = OpenSessionRequest_LogStreamingOptions{}
	mi := &file_bonk_v0_bonk_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *OpenSessionRequest_LogStreamingOptions) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OpenSessionRequest_LogStreamingOptions) ProtoMessage() {}

func (x *OpenSessionRequest_LogStreamingOptions) ProtoReflect() protoreflect.Message {
	mi := &file_bonk_v0_bonk_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *OpenSessionRequest_LogStreamingOptions) GetLevel() int64 {
	if x != nil {
		return x.xxx_hidden_Level
	}
	return 0
}

func (x *OpenSessionRequest_LogStreamingOptions) GetAddSource() bool {
	if x != nil {
		return x.xxx_hidden_AddSource
	}
	return false
}

func (x *OpenSessionRequest_LogStreamingOptions) SetLevel(v int64) {
	x.xxx_hidden_Level = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 2)
}

func (x *OpenSessionRequest_LogStreamingOptions) SetAddSource(v bool) {
	x.xxx_hidden_AddSource = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 2)
}

func (x *OpenSessionRequest_LogStreamingOptions) HasLevel() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *OpenSessionRequest_LogStreamingOptions) HasAddSource() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *OpenSessionRequest_LogStreamingOptions) ClearLevel() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_Level = 0
}

func (x *OpenSessionRequest_LogStreamingOptions) ClearAddSource() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_AddSource = false
}

type OpenSessionRequest_LogStreamingOptions_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Level     *int64
	AddSource *bool
}

func (b0 OpenSessionRequest_LogStreamingOptions_builder) Build() *OpenSessionRequest_LogStreamingOptions {
	m0 := &OpenSessionRequest_LogStreamingOptions{}
	b, x := &b0, m0
	_, _ = b, x
	if b.Level != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 2)
		x.xxx_hidden_Level = *b.Level
	}
	if b.AddSource != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 2)
		x.xxx_hidden_AddSource = *b.AddSource
	}
	return m0
}

type OpenSessionRequest_WorkspaceDescriptionLocal struct {
	state                   protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_AbsolutePath *string                `protobuf:"bytes,1,opt,name=absolute_path,json=absolutePath"`
	XXX_raceDetectHookData  protoimpl.RaceDetectHookData
	XXX_presence            [1]uint32
	unknownFields           protoimpl.UnknownFields
	sizeCache               protoimpl.SizeCache
}

func (x *OpenSessionRequest_WorkspaceDescriptionLocal) Reset() {
	*x = OpenSessionRequest_WorkspaceDescriptionLocal{}
	mi := &file_bonk_v0_bonk_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *OpenSessionRequest_WorkspaceDescriptionLocal) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OpenSessionRequest_WorkspaceDescriptionLocal) ProtoMessage() {}

func (x *OpenSessionRequest_WorkspaceDescriptionLocal) ProtoReflect() protoreflect.Message {
	mi := &file_bonk_v0_bonk_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *OpenSessionRequest_WorkspaceDescriptionLocal) GetAbsolutePath() string {
	if x != nil {
		if x.xxx_hidden_AbsolutePath != nil {
			return *x.xxx_hidden_AbsolutePath
		}
		return ""
	}
	return ""
}

func (x *OpenSessionRequest_WorkspaceDescriptionLocal) SetAbsolutePath(v string) {
	x.xxx_hidden_AbsolutePath = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 1)
}

func (x *OpenSessionRequest_WorkspaceDescriptionLocal) HasAbsolutePath() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *OpenSessionRequest_WorkspaceDescriptionLocal) ClearAbsolutePath() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_AbsolutePath = nil
}

type OpenSessionRequest_WorkspaceDescriptionLocal_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	AbsolutePath *string
}

func (b0 OpenSessionRequest_WorkspaceDescriptionLocal_builder) Build() *OpenSessionRequest_WorkspaceDescriptionLocal {
	m0 := &OpenSessionRequest_WorkspaceDescriptionLocal{}
	b, x := &b0, m0
	_, _ = b, x
	if b.AbsolutePath != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 1)
		x.xxx_hidden_AbsolutePath = b.AbsolutePath
	}
	return m0
}

type OpenSessionRequest_WorkspaceDescriptionTest struct {
	state         protoimpl.MessageState `protogen:"opaque.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *OpenSessionRequest_WorkspaceDescriptionTest) Reset() {
	*x = OpenSessionRequest_WorkspaceDescriptionTest{}
	mi := &file_bonk_v0_bonk_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *OpenSessionRequest_WorkspaceDescriptionTest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OpenSessionRequest_WorkspaceDescriptionTest) ProtoMessage() {}

func (x *OpenSessionRequest_WorkspaceDescriptionTest) ProtoReflect() protoreflect.Message {
	mi := &file_bonk_v0_bonk_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

type OpenSessionRequest_WorkspaceDescriptionTest_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

}

func (b0 OpenSessionRequest_WorkspaceDescriptionTest_builder) Build() *OpenSessionRequest_WorkspaceDescriptionTest {
	m0 := &OpenSessionRequest_WorkspaceDescriptionTest{}
	b, x := &b0, m0
	_, _ = b, x
	return m0
}

type OpenSessionResponse_Ack struct {
	state         protoimpl.MessageState `protogen:"opaque.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *OpenSessionResponse_Ack) Reset() {
	*x = OpenSessionResponse_Ack{}
	mi := &file_bonk_v0_bonk_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *OpenSessionResponse_Ack) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OpenSessionResponse_Ack) ProtoMessage() {}

func (x *OpenSessionResponse_Ack) ProtoReflect() protoreflect.Message {
	mi := &file_bonk_v0_bonk_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

type OpenSessionResponse_Ack_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

}

func (b0 OpenSessionResponse_Ack_builder) Build() *OpenSessionResponse_Ack {
	m0 := &OpenSessionResponse_Ack{}
	b, x := &b0, m0
	_, _ = b, x
	return m0
}

type OpenSessionResponse_LogRecord struct {
	state                  protoimpl.MessageState     `protogen:"opaque.v1"`
	xxx_hidden_Time        *timestamppb.Timestamp     `protobuf:"bytes,1,opt,name=time"`
	xxx_hidden_Message     *string                    `protobuf:"bytes,2,opt,name=message"`
	xxx_hidden_Level       int64                      `protobuf:"varint,3,opt,name=level"`
	xxx_hidden_Attrs       map[string]*structpb.Value `protobuf:"bytes,4,rep,name=attrs" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	XXX_raceDetectHookData protoimpl.RaceDetectHookData
	XXX_presence           [1]uint32
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *OpenSessionResponse_LogRecord) Reset() {
	*x = OpenSessionResponse_LogRecord{}
	mi := &file_bonk_v0_bonk_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *OpenSessionResponse_LogRecord) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OpenSessionResponse_LogRecord) ProtoMessage() {}

func (x *OpenSessionResponse_LogRecord) ProtoReflect() protoreflect.Message {
	mi := &file_bonk_v0_bonk_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *OpenSessionResponse_LogRecord) GetTime() *timestamppb.Timestamp {
	if x != nil {
		return x.xxx_hidden_Time
	}
	return nil
}

func (x *OpenSessionResponse_LogRecord) GetMessage() string {
	if x != nil {
		if x.xxx_hidden_Message != nil {
			return *x.xxx_hidden_Message
		}
		return ""
	}
	return ""
}

func (x *OpenSessionResponse_LogRecord) GetLevel() int64 {
	if x != nil {
		return x.xxx_hidden_Level
	}
	return 0
}

func (x *OpenSessionResponse_LogRecord) GetAttrs() map[string]*structpb.Value {
	if x != nil {
		return x.xxx_hidden_Attrs
	}
	return nil
}

func (x *OpenSessionResponse_LogRecord) SetTime(v *timestamppb.Timestamp) {
	x.xxx_hidden_Time = v
}

func (x *OpenSessionResponse_LogRecord) SetMessage(v string) {
	x.xxx_hidden_Message = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 4)
}

func (x *OpenSessionResponse_LogRecord) SetLevel(v int64) {
	x.xxx_hidden_Level = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 2, 4)
}

func (x *OpenSessionResponse_LogRecord) SetAttrs(v map[string]*structpb.Value) {
	x.xxx_hidden_Attrs = v
}

func (x *OpenSessionResponse_LogRecord) HasTime() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_Time != nil
}

func (x *OpenSessionResponse_LogRecord) HasMessage() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *OpenSessionResponse_LogRecord) HasLevel() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 2)
}

func (x *OpenSessionResponse_LogRecord) ClearTime() {
	x.xxx_hidden_Time = nil
}

func (x *OpenSessionResponse_LogRecord) ClearMessage() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_Message = nil
}

func (x *OpenSessionResponse_LogRecord) ClearLevel() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 2)
	x.xxx_hidden_Level = 0
}

type OpenSessionResponse_LogRecord_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Time    *timestamppb.Timestamp
	Message *string
	Level   *int64
	Attrs   map[string]*structpb.Value
}

func (b0 OpenSessionResponse_LogRecord_builder) Build() *OpenSessionResponse_LogRecord {
	m0 := &OpenSessionResponse_LogRecord{}
	b, x := &b0, m0
	_, _ = b, x
	x.xxx_hidden_Time = b.Time
	if b.Message != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 4)
		x.xxx_hidden_Message = b.Message
	}
	if b.Level != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 2, 4)
		x.xxx_hidden_Level = *b.Level
	}
	x.xxx_hidden_Attrs = b.Attrs
	return m0
}

type ExecuteTaskResponse_FollowupTask struct {
	state                  protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Id          *string                `protobuf:"bytes,1,opt,name=id"`
	xxx_hidden_Executor    *string                `protobuf:"bytes,2,opt,name=executor"`
	xxx_hidden_Inputs      []string               `protobuf:"bytes,3,rep,name=inputs"`
	xxx_hidden_Arguments   *structpb.Value        `protobuf:"bytes,4,opt,name=arguments"`
	XXX_raceDetectHookData protoimpl.RaceDetectHookData
	XXX_presence           [1]uint32
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *ExecuteTaskResponse_FollowupTask) Reset() {
	*x = ExecuteTaskResponse_FollowupTask{}
	mi := &file_bonk_v0_bonk_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ExecuteTaskResponse_FollowupTask) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExecuteTaskResponse_FollowupTask) ProtoMessage() {}

func (x *ExecuteTaskResponse_FollowupTask) ProtoReflect() protoreflect.Message {
	mi := &file_bonk_v0_bonk_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *ExecuteTaskResponse_FollowupTask) GetId() string {
	if x != nil {
		if x.xxx_hidden_Id != nil {
			return *x.xxx_hidden_Id
		}
		return ""
	}
	return ""
}

func (x *ExecuteTaskResponse_FollowupTask) GetExecutor() string {
	if x != nil {
		if x.xxx_hidden_Executor != nil {
			return *x.xxx_hidden_Executor
		}
		return ""
	}
	return ""
}

func (x *ExecuteTaskResponse_FollowupTask) GetInputs() []string {
	if x != nil {
		return x.xxx_hidden_Inputs
	}
	return nil
}

func (x *ExecuteTaskResponse_FollowupTask) GetArguments() *structpb.Value {
	if x != nil {
		return x.xxx_hidden_Arguments
	}
	return nil
}

func (x *ExecuteTaskResponse_FollowupTask) SetId(v string) {
	x.xxx_hidden_Id = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 4)
}

func (x *ExecuteTaskResponse_FollowupTask) SetExecutor(v string) {
	x.xxx_hidden_Executor = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 4)
}

func (x *ExecuteTaskResponse_FollowupTask) SetInputs(v []string) {
	x.xxx_hidden_Inputs = v
}

func (x *ExecuteTaskResponse_FollowupTask) SetArguments(v *structpb.Value) {
	x.xxx_hidden_Arguments = v
}

func (x *ExecuteTaskResponse_FollowupTask) HasId() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *ExecuteTaskResponse_FollowupTask) HasExecutor() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *ExecuteTaskResponse_FollowupTask) HasArguments() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_Arguments != nil
}

func (x *ExecuteTaskResponse_FollowupTask) ClearId() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_Id = nil
}

func (x *ExecuteTaskResponse_FollowupTask) ClearExecutor() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_Executor = nil
}

func (x *ExecuteTaskResponse_FollowupTask) ClearArguments() {
	x.xxx_hidden_Arguments = nil
}

type ExecuteTaskResponse_FollowupTask_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Id        *string
	Executor  *string
	Inputs    []string
	Arguments *structpb.Value
}

func (b0 ExecuteTaskResponse_FollowupTask_builder) Build() *ExecuteTaskResponse_FollowupTask {
	m0 := &ExecuteTaskResponse_FollowupTask{}
	b, x := &b0, m0
	_, _ = b, x
	if b.Id != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 4)
		x.xxx_hidden_Id = b.Id
	}
	if b.Executor != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 4)
		x.xxx_hidden_Executor = b.Executor
	}
	x.xxx_hidden_Inputs = b.Inputs
	x.xxx_hidden_Arguments = b.Arguments
	return m0
}

var File_bonk_v0_bonk_proto protoreflect.FileDescriptor

const file_bonk_v0_bonk_proto_rawDesc = "" +
	"\n" +
	"\x12bonk/v0/bonk.proto\x12\abonk.v0\x1a\x1cgoogle/protobuf/struct.proto\x1a\x1fgoogle/protobuf/timestamp.proto\"\xe7\x03\n" +
	"\x12OpenSessionRequest\x12\x1d\n" +
	"\n" +
	"session_id\x18\x01 \x01(\tR\tsessionId\x12T\n" +
	"\rlog_streaming\x18\x02 \x01(\v2/.bonk.v0.OpenSessionRequest.LogStreamingOptionsR\flogStreaming\x12M\n" +
	"\x05local\x18\x05 \x01(\v25.bonk.v0.OpenSessionRequest.WorkspaceDescriptionLocalH\x00R\x05local\x12J\n" +
	"\x04test\x18c \x01(\v24.bonk.v0.OpenSessionRequest.WorkspaceDescriptionTestH\x00R\x04test\x1aJ\n" +
	"\x13LogStreamingOptions\x12\x14\n" +
	"\x05level\x18\x01 \x01(\x03R\x05level\x12\x1d\n" +
	"\n" +
	"add_source\x18\x02 \x01(\bR\taddSource\x1a@\n" +
	"\x19WorkspaceDescriptionLocal\x12#\n" +
	"\rabsolute_path\x18\x01 \x01(\tR\fabsolutePath\x1a\x1a\n" +
	"\x18WorkspaceDescriptionTestB\x17\n" +
	"\x15workspace_description\"\xaf\x03\n" +
	"\x13OpenSessionResponse\x124\n" +
	"\x03ack\x18\x01 \x01(\v2 .bonk.v0.OpenSessionResponse.AckH\x00R\x03ack\x12G\n" +
	"\n" +
	"log_record\x18\x02 \x01(\v2&.bonk.v0.OpenSessionResponse.LogRecordH\x00R\tlogRecord\x1a\x05\n" +
	"\x03Ack\x1a\x86\x02\n" +
	"\tLogRecord\x12.\n" +
	"\x04time\x18\x01 \x01(\v2\x1a.google.protobuf.TimestampR\x04time\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage\x12\x14\n" +
	"\x05level\x18\x03 \x01(\x03R\x05level\x12G\n" +
	"\x05attrs\x18\x04 \x03(\v21.bonk.v0.OpenSessionResponse.LogRecord.AttrsEntryR\x05attrs\x1aP\n" +
	"\n" +
	"AttrsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12,\n" +
	"\x05value\x18\x02 \x01(\v2\x16.google.protobuf.ValueR\x05value:\x028\x01B\t\n" +
	"\amessage\"\xad\x01\n" +
	"\x12ExecuteTaskRequest\x12\x1d\n" +
	"\n" +
	"session_id\x18\x01 \x01(\tR\tsessionId\x12\x0e\n" +
	"\x02id\x18\x02 \x01(\tR\x02id\x12\x1a\n" +
	"\bexecutor\x18\x03 \x01(\tR\bexecutor\x12\x16\n" +
	"\x06inputs\x18\x04 \x03(\tR\x06inputs\x124\n" +
	"\targuments\x18\x05 \x01(\v2\x16.google.protobuf.ValueR\targuments\"\x8a\x02\n" +
	"\x13ExecuteTaskResponse\x12\x16\n" +
	"\x06output\x18\x01 \x03(\tR\x06output\x12P\n" +
	"\x0efollowup_tasks\x18\x02 \x03(\v2).bonk.v0.ExecuteTaskResponse.FollowupTaskR\rfollowupTasks\x1a\x88\x01\n" +
	"\fFollowupTask\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x1a\n" +
	"\bexecutor\x18\x02 \x01(\tR\bexecutor\x12\x16\n" +
	"\x06inputs\x18\x03 \x03(\tR\x06inputs\x124\n" +
	"\targuments\x18\x04 \x01(\v2\x16.google.protobuf.ValueR\targuments2\xa9\x01\n" +
	"\x0fExecutorService\x12L\n" +
	"\vOpenSession\x12\x1b.bonk.v0.OpenSessionRequest\x1a\x1c.bonk.v0.OpenSessionResponse(\x010\x01\x12H\n" +
	"\vExecuteTask\x12\x1b.bonk.v0.ExecuteTaskRequest\x1a\x1c.bonk.v0.ExecuteTaskResponseBs\n" +
	"\vcom.bonk.v0B\tBonkProtoP\x01Z\x1cgo.bonk.build/api/go/bonk/v0\xa2\x02\x03BVX\xaa\x02\aBonk.V0\xca\x02\aBonk\\V0\xe2\x02\x13Bonk\\V0\\GPBMetadata\xea\x02\bBonk::V0b\beditionsp\xe8\a"

var file_bonk_v0_bonk_proto_msgTypes = make([]protoimpl.MessageInfo, 11)
var file_bonk_v0_bonk_proto_goTypes = []any{
	(*OpenSessionRequest)(nil),                           // 0: bonk.v0.OpenSessionRequest
	(*OpenSessionResponse)(nil),                          // 1: bonk.v0.OpenSessionResponse
	(*ExecuteTaskRequest)(nil),                           // 2: bonk.v0.ExecuteTaskRequest
	(*ExecuteTaskResponse)(nil),                          // 3: bonk.v0.ExecuteTaskResponse
	(*OpenSessionRequest_LogStreamingOptions)(nil),       // 4: bonk.v0.OpenSessionRequest.LogStreamingOptions
	(*OpenSessionRequest_WorkspaceDescriptionLocal)(nil), // 5: bonk.v0.OpenSessionRequest.WorkspaceDescriptionLocal
	(*OpenSessionRequest_WorkspaceDescriptionTest)(nil),  // 6: bonk.v0.OpenSessionRequest.WorkspaceDescriptionTest
	(*OpenSessionResponse_Ack)(nil),                      // 7: bonk.v0.OpenSessionResponse.Ack
	(*OpenSessionResponse_LogRecord)(nil),                // 8: bonk.v0.OpenSessionResponse.LogRecord
	nil,                                                  // 9: bonk.v0.OpenSessionResponse.LogRecord.AttrsEntry
	(*ExecuteTaskResponse_FollowupTask)(nil),             // 10: bonk.v0.ExecuteTaskResponse.FollowupTask
	(*structpb.Value)(nil),                               // 11: google.protobuf.Value
	(*timestamppb.Timestamp)(nil),                        // 12: google.protobuf.Timestamp
}
var file_bonk_v0_bonk_proto_depIdxs = []int32{
	4,  // 0: bonk.v0.OpenSessionRequest.log_streaming:type_name -> bonk.v0.OpenSessionRequest.LogStreamingOptions
	5,  // 1: bonk.v0.OpenSessionRequest.local:type_name -> bonk.v0.OpenSessionRequest.WorkspaceDescriptionLocal
	6,  // 2: bonk.v0.OpenSessionRequest.test:type_name -> bonk.v0.OpenSessionRequest.WorkspaceDescriptionTest
	7,  // 3: bonk.v0.OpenSessionResponse.ack:type_name -> bonk.v0.OpenSessionResponse.Ack
	8,  // 4: bonk.v0.OpenSessionResponse.log_record:type_name -> bonk.v0.OpenSessionResponse.LogRecord
	11, // 5: bonk.v0.ExecuteTaskRequest.arguments:type_name -> google.protobuf.Value
	10, // 6: bonk.v0.ExecuteTaskResponse.followup_tasks:type_name -> bonk.v0.ExecuteTaskResponse.FollowupTask
	12, // 7: bonk.v0.OpenSessionResponse.LogRecord.time:type_name -> google.protobuf.Timestamp
	9,  // 8: bonk.v0.OpenSessionResponse.LogRecord.attrs:type_name -> bonk.v0.OpenSessionResponse.LogRecord.AttrsEntry
	11, // 9: bonk.v0.OpenSessionResponse.LogRecord.AttrsEntry.value:type_name -> google.protobuf.Value
	11, // 10: bonk.v0.ExecuteTaskResponse.FollowupTask.arguments:type_name -> google.protobuf.Value
	0,  // 11: bonk.v0.ExecutorService.OpenSession:input_type -> bonk.v0.OpenSessionRequest
	2,  // 12: bonk.v0.ExecutorService.ExecuteTask:input_type -> bonk.v0.ExecuteTaskRequest
	1,  // 13: bonk.v0.ExecutorService.OpenSession:output_type -> bonk.v0.OpenSessionResponse
	3,  // 14: bonk.v0.ExecutorService.ExecuteTask:output_type -> bonk.v0.ExecuteTaskResponse
	13, // [13:15] is the sub-list for method output_type
	11, // [11:13] is the sub-list for method input_type
	11, // [11:11] is the sub-list for extension type_name
	11, // [11:11] is the sub-list for extension extendee
	0,  // [0:11] is the sub-list for field type_name
}

func init() { file_bonk_v0_bonk_proto_init() }
func file_bonk_v0_bonk_proto_init() {
	if File_bonk_v0_bonk_proto != nil {
		return
	}
	file_bonk_v0_bonk_proto_msgTypes[0].OneofWrappers = []any{
		(*openSessionRequest_Local)(nil),
		(*openSessionRequest_Test)(nil),
	}
	file_bonk_v0_bonk_proto_msgTypes[1].OneofWrappers = []any{
		(*openSessionResponse_Ack_)(nil),
		(*openSessionResponse_LogRecord_)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_bonk_v0_bonk_proto_rawDesc), len(file_bonk_v0_bonk_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   11,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_bonk_v0_bonk_proto_goTypes,
		DependencyIndexes: file_bonk_v0_bonk_proto_depIdxs,
		MessageInfos:      file_bonk_v0_bonk_proto_msgTypes,
	}.Build()
	File_bonk_v0_bonk_proto = out.File
	file_bonk_v0_bonk_proto_goTypes = nil
	file_bonk_v0_bonk_proto_depIdxs = nil
}
