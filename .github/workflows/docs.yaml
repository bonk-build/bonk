# Copyright Â© 2025 Colden Cullen
# SPDX-License-Identifier: MIT

name: docs
on:
  push: {}
  release:
    types:
      - published

jobs:
  publish-docs:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5
        with:
          ssh-key: ${{ secrets.DOCS_DEPLOY_KEY }}
      - uses: actions/setup-python@a26af69be951a213d495a4c3e4e4022e16d87065 # v5
        id: setup-python
        with:
          python-version: 3.13
      - uses: actions/setup-go@d35c59abb061a4a6fb18e82ac0862c26744d6ab5 # v5.5.0
        with:
          go-version-file: go.mod

      - name: setup pipx environment variables
        id: pipx-env-setup
        # pipx default home and bin dir are not writable by the cache action
        # so override them here and add the bin dir to PATH for later steps.
        # This also ensures the pipx cache only contains poetry
        run: |
          SEP="${{ !startsWith(runner.os, 'windows') && '/' || '\\' }}"
          PIPX_CACHE="${{ github.workspace }}${SEP}pipx_cache"
          echo "pipx-cache-path=${PIPX_CACHE}" >> $GITHUB_OUTPUT
          echo "pipx-version=$(pipx --version)" >> $GITHUB_OUTPUT
          echo "PIPX_HOME=${PIPX_CACHE}${SEP}home" >> $GITHUB_ENV
          echo "PIPX_BIN_DIR=${PIPX_CACHE}${SEP}bin" >> $GITHUB_ENV
          echo "PIPX_MAN_DIR=${PIPX_CACHE}${SEP}man" >> $GITHUB_ENV
          echo "${PIPX_CACHE}${SEP}bin" >> $GITHUB_PATH
        shell: bash

      - name: pipx cache
        id: pipx-cache
        uses: actions/cache@v4
        with:
          path: ${{ steps.pipx-env-setup.outputs.pipx-cache-path }}
          key: ${{ runner.os }}-python-${{ steps.setup-python.outputs.python-version }}-pipx-${{ steps.pipx-env-setup.outputs.pipx-version }}

      - name: install mike
        if: steps.pipx-cache.outputs.cache-hit != 'true'
        run: pipx install mike

      - name: generate cmd docs
        run: go run -tags docs ./cmd/cuebe docs

      - name: commit generated docs
        uses: stefanzweifel/git-auto-commit-action@v6.0.1
        with:
          commit_message: "docs: generate cmd docs"
          file_pattern: ./docs/cmd/*.md
          add_options: --all

      - name: publish docs
        if: github.ref_name == 'main'
        run: mike deploy --push main

      - name: publish release
        if: startsWith(github.ref, 'refs/tags/v')
        run: mike deploy --push --update-aliases ${{ github.ref_name }} latest
