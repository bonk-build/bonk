# Copyright Â© 2025 Colden Cullen
# SPDX-License-Identifier: MIT

name: push
on:
  - push

jobs:
  generate:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5
        with:
          ssh-key: ${{ secrets.DOCS_DEPLOY_KEY }}
          fetch-depth: 0
          fetch-tags: true
      - uses: fregante/setup-git-user@024bc0b8e177d7e77203b48dab6fb45666854b35 # v2.0.2
      - uses: jdx/mise-action@e3d7b8d67a7958d1207f6ed871e83b1ea780e7b0 # v3.3.1
        with:
          experimental: true

      - run: go generate ./...

      - name: commit changed files
        uses: stefanzweifel/git-auto-commit-action@28e16e81777b558cc906c8750092100bbb34c5e3 # v7.0.0
        with:
          commit_message: "chore: run go-generate"
          add_options: --all
        if: always()

  lint:
    runs-on: ubuntu-latest
    permissions:
      # Required: allow read access to the content for analysis.
      contents: read
      # Optional: allow read access to pull requests. Use with `only-new-issues` option.
      pull-requests: read
    steps:
      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5
      - uses: jdx/mise-action@e3d7b8d67a7958d1207f6ed871e83b1ea780e7b0 # v3.3.1
        with:
          experimental: true

      - run: hawkeye check

      - name: buf build
        uses: bufbuild/buf-action@8f4a1456a0ab6a1eb80ba68e53832e6fcfacc16c # v1.3.0
        with:
          lint: true
          format: true
          push: false

      - name: golangci-lint
        uses: golangci/golangci-lint-action@v8
        with:
          install-mode: none
          only-new-issues: true

  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5
      - uses: jdx/mise-action@e3d7b8d67a7958d1207f6ed871e83b1ea780e7b0 # v3.3.1
        with:
          experimental: true

      - name: go mod tidy
        run: go mod tidy -diff

      - name: go build
        run: go build ./...

      - name: go test
        run: go tool gotestsum --packages="./..." --junitfile junit.xml --jsonfile gotest.json -- -coverprofile=coverage.txt -race -count 100 -parallel $(nproc)

      - name: process results for summary
        uses: robherley/go-test-action@b19f6aadabfb1ad85079065b21aa2af132466468 # v0.6.0
        with:
          fromJSONFile: gotest.json

      - name: upload coverage reports to Codecov
        uses: codecov/codecov-action@5a1091511ad55cbe89839c7260b706298ca349f7 # v5.5.1
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          files: ./coverage.txt

      - name: upload test results to Codecov
        if: ${{ !cancelled() }}
        uses: codecov/test-results-action@47f89e9acb64b76debcd5ea40642d25a4adced9f # v1.1.1
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          files: ./junit.xml

  build-docs:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5
      - uses: jdx/mise-action@e3d7b8d67a7958d1207f6ed871e83b1ea780e7b0 # v3.3.1
        with:
          experimental: true

      - name: build docs
        run: mkdocs build

      - name: upload docs
        uses: actions/upload-pages-artifact@7b1f4a764d45c48632c6b24a0339c27f5614fb0b # v4.0.0
        with:
          path: site/

  deploy-docs:
    runs-on: ubuntu-latest

    # Only deploy from main (this will be later replaced by previews)
    if: github.ref_name == 'main'

    needs:
      - build-docs

    permissions:
      pages: write # to deploy to Pages
      id-token: write # to verify the deployment originates from an appropriate source

    # Deploy to the github-pages environment
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}

    steps:
      - name: deploy pages
        id: deployment
        uses: actions/deploy-pages@d6db90164ac5ed86f2b6aed7e0febac5b3c0c03e # v4.0.5
